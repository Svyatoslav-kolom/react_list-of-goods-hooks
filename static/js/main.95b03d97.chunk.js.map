{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","Default","sortField","setSortField","reversed","setReversed","displayedGoods","goods","isReversed","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAgBL,IAyBaE,EAAM,WACjB,MAAkCC,mBAASH,EAAUI,SAArD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EA7BuB,SAACC,EAAD,GAAiD,IAA7BL,EAA4B,EAA5BA,UAAWM,EAAiB,EAAjBA,WACtDC,EAAa,YAAOF,GAqB1B,OAnBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKL,EAAUgB,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAAUkB,OACb,OAAOJ,EAAMT,GAAaU,EAAMV,GAElC,QACE,OAAO,MAKXM,GACFC,EAAcO,UAGTP,EAQHQ,CAAiBnB,EAAiB,CAAEI,YAAWM,WAAYJ,IAmB/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAcL,EAAUgB,WAExCQ,QAjBW,WACjBlB,EAAaN,EAAUgB,WAUnB,iCAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAcL,EAAUkB,SAExCM,QAxBa,WACnBlB,EAAaN,EAAUkB,SAiBnB,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAahB,IAEjBiB,QA3CQ,WACdhB,GAAaD,IAoCT,sBAWEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAzDI,WACZlB,EAAaN,EAAUI,SACvBI,GAAY,IAoDN,sBAUJ,6BACGC,EAAegB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95b03d97.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\ntype StateType = {\n  sortField: string,\n  isReversed: boolean,\n};\n\ntype Func = (\n  goods: string[],\n  { sortField, isReversed }: StateType\n) => string[];\n\nconst getPreparedGoods: Func = (goods: string[], { sortField, isReversed }) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortField.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortField.Length:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SortField.Default);\n  const [reversed, setReversed] = useState(false);\n\n  const displayedGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed: reversed });\n\n  const reset = () => {\n    setSortField(SortField.Default);\n    setReversed(false);\n  };\n\n  const reverse = () => {\n    setReversed(!reversed);\n  };\n\n  const sortByName = () => {\n    setSortField(SortField.Alphabet);\n  };\n\n  const sortByLength = () => {\n    setSortField(SortField.Length);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SortField.Alphabet },\n          )}\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SortField.Length },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !reversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {displayedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}